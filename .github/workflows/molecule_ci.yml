name: "molecule tests"

on:
  push:
    branches:
      - test


env:
  MOLECULEW_USE_SYSTEM: 'true'
  PY_COLORS: '1'
  ANSIBLE_FORCE_COLOR: '1'

jobs:

  molecule-test:
    name: Molecule test
    runs-on: ubuntu-22.04 #https://github.com/actions/runner-images

    strategy:
      matrix:
        ansible-version:
          - '2.10.7'
        molecule-scenario:
          - alpine
          # https://github.com/githubfoam/githubactions-ansible-role-molecule/actions/runs/2916874942
          # - amazon
          # https://github.com/githubfoam/githubactions-ansible-role-molecule/actions/runs/2916846600
          # - archlinux
          - centos7
          # https://github.com/githubfoam/githubactions-ansible-role-molecule/actions/runs/2916863554
          # - clearlinux
          - debian
          - fedora
          - opensuseleap
          - oraclelinux
          - rocky
          - scientific
          - stream9
          - ubuntu2004
          - ubuntu2204
          - stream9
    env:
      MOLECULEW_ANSIBLE: ${{ matrix.ansible-version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Cache Molecule
        id: molecule-cache
        uses: actions/cache@v2
        with:
          path: ~/.moleculew
          key: Ansible-${{ matrix.ansible-version }}-${{ hashFiles('.moleculew/**') }}

      - name: Wrapper permissions
        run: chmod 'u+x' moleculew && ls -lai moleculew

      - name: Install dependencies
        if: steps.molecule-cache.outputs.cache-hit != 'true'
        run: ./moleculew wrapper-install

      - name: Dependency versions
        run: ./moleculew wrapper-versions

      - name: Molecule debug lint
        run: ./moleculew --debug lint --scenario-name=${{ matrix.molecule-scenario }}

      - name: Molecule debug test
        run: ./moleculew --debug test --scenario-name=${{ matrix.molecule-scenario }}

      - name: Molecule test
        run: ./moleculew test --scenario-name=${{ matrix.molecule-scenario }}

  molecule-test-all:
    if: ${{ always() }}
    name: Test (matrix)
    runs-on: ubuntu-22.04
    needs: molecule-test
    steps:
      - name: Check test matrix status
        run: "[[ '${{ needs.test.result }}' == 'success' ]] || exit 1"

  release-role:
    if: ${{ always() }}
    name: "deploy on docker hub"
    runs-on: ubuntu-22.04
    needs: molecule-test
    steps:
      - name: "Login to Docker Hub"
        # if: '!github.event.pull_request || github.event.pull_request.head.repo.full_name == github.repository'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
